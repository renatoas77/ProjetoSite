// <auto-generated />
using FighteR_PG.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FighteR_PG.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230111021615_CharacterFix")]
    partial class CharacterFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FighteR_PG.Models.Archetype", b =>
                {
                    b.Property<int>("ArchetypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArchetypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArchetypeId");

                    b.ToTable("Archetypes");
                });

            modelBuilder.Entity("FighteR_PG.Models.Boss", b =>
                {
                    b.Property<int>("BossId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BossId"), 1L, 1);

                    b.Property<string>("GerneralText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SexId")
                        .HasColumnType("int");

                    b.Property<int>("TierId")
                        .HasColumnType("int");

                    b.HasKey("BossId");

                    b.HasIndex("SexId");

                    b.HasIndex("TierId");

                    b.ToTable("Bosses");
                });

            modelBuilder.Entity("FighteR_PG.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterId"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("ArchetypeId")
                        .HasColumnType("int");

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conclusao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Curiosity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dislikes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Food")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fury")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Hit01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hit02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hobby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ideias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JumpCombo01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JumpCombo02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JumpComboImage01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JumpComboImage02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Likes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunningCombo01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunningCombo02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunningComboImage01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunningComboImage02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunningJumpCombo01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunningJumpCombo02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunningJumpComboImage01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunningJumpComboImage02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SexId")
                        .HasColumnType("int");

                    b.Property<string>("SkillDesc01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc03")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc04")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc05")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc06")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc07")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc09")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillDesc12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage03")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage04")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage05")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage06")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage07")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage09")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillImage12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName03")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName04")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName05")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName06")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName07")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName09")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Special01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Special02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialDesc01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialDesc02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialImage01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialImage02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StandCombo01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StandCombo02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StandComboImage01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StandComboImage02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalkingCombo01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalkingCombo02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalkingComboImage01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalkingComboImage02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weapon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("CharacterId");

                    b.HasIndex("ArchetypeId");

                    b.HasIndex("SexId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("FighteR_PG.Models.Sex", b =>
                {
                    b.Property<int>("SexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SexId"), 1L, 1);

                    b.Property<string>("SexCharacter")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("SexId");

                    b.ToTable("Sexes");
                });

            modelBuilder.Entity("FighteR_PG.Models.Tier", b =>
                {
                    b.Property<int>("TierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TierId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TierId");

                    b.ToTable("Tier");
                });

            modelBuilder.Entity("FighteR_PG.Models.Boss", b =>
                {
                    b.HasOne("FighteR_PG.Models.Sex", "Sex")
                        .WithMany("Bosses")
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FighteR_PG.Models.Tier", "Tier")
                        .WithMany("Bosss")
                        .HasForeignKey("TierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sex");

                    b.Navigation("Tier");
                });

            modelBuilder.Entity("FighteR_PG.Models.Character", b =>
                {
                    b.HasOne("FighteR_PG.Models.Archetype", "Archetype")
                        .WithMany("Characters")
                        .HasForeignKey("ArchetypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FighteR_PG.Models.Sex", "Sex")
                        .WithMany("Characters")
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archetype");

                    b.Navigation("Sex");
                });

            modelBuilder.Entity("FighteR_PG.Models.Archetype", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("FighteR_PG.Models.Sex", b =>
                {
                    b.Navigation("Bosses");

                    b.Navigation("Characters");
                });

            modelBuilder.Entity("FighteR_PG.Models.Tier", b =>
                {
                    b.Navigation("Bosss");
                });
#pragma warning restore 612, 618
        }
    }
}
